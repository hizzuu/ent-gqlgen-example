// Code generated by entc, DO NOT EDIT.

package ent

import "context"

func (i *Image) Posts(ctx context.Context) (*Post, error) {
	result, err := i.Edges.PostsOrErr()
	if IsNotLoaded(err) {
		result, err = i.QueryPosts().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (i *Image) Users(ctx context.Context) (*User, error) {
	result, err := i.Edges.UsersOrErr()
	if IsNotLoaded(err) {
		result, err = i.QueryUsers().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (po *Post) User(ctx context.Context) (*User, error) {
	result, err := po.Edges.UserOrErr()
	if IsNotLoaded(err) {
		result, err = po.QueryUser().Only(ctx)
	}
	return result, err
}

func (po *Post) Photo(ctx context.Context) (*Image, error) {
	result, err := po.Edges.PhotoOrErr()
	if IsNotLoaded(err) {
		result, err = po.QueryPhoto().Only(ctx)
	}
	return result, err
}

func (u *User) Posts(ctx context.Context) ([]*Post, error) {
	result, err := u.Edges.PostsOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryPosts().All(ctx)
	}
	return result, err
}

func (u *User) Avatar(ctx context.Context) (*Image, error) {
	result, err := u.Edges.AvatarOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryAvatar().Only(ctx)
	}
	return result, MaskNotFound(err)
}
